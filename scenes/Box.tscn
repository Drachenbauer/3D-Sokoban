[gd_scene load_steps=7 format=2]

[ext_resource path="res://assets/BoxMaterial.tres" type="Material" id=1]
[ext_resource path="res://assets/OnTargetMaterial.tres" type="Material" id=2]

[sub_resource type="GDScript" id=3]
script/source = "extends Spatial


# Declare member variables here:
onready var mesh_1 = $MeshInstance_1
onready var mesh_2 = $MeshInstance_2

var grid
var type
var step = 0
var pos = Vector3(0, 0, 0)
var undo_pos = Vector3(0, 0, 0)
var direction = Vector3(0, 0, 0)

const STEP = 16.0 / 60.0

# Called when the node enters the scene tree for the first time.
func _ready():
	grid = get_parent()
	type = grid.BOX
	pos = translation
	
	check_display_state()


func push(dir):
	if grid.has_pusher(pos, dir) || step > 0:
		if step == 0:
			direction = dir
		
		step += 1
		pos += STEP * direction
		
		if step == 60:
			step = 0
			pos = Vector3(round(pos.x), 8, round(pos.z))
			grid.update_child_pos(self)
		
		set_translation(Vector3(pos.x, 8, pos.z))
		check_display_state()


func check_display_state():
	if is_on_target():
		mesh_1.visible = false
		mesh_2.visible = true
	else:
		mesh_1.visible = true
		mesh_2.visible = false


func is_on_target():
	return grid.is_on_target(pos)
"

[sub_resource type="CubeMesh" id=1]
material = ExtResource( 1 )
size = Vector3( 12, 12, 12 )

[sub_resource type="Skin" id=2]

[sub_resource type="CubeMesh" id=4]
material = ExtResource( 2 )
size = Vector3( 12, 12, 12 )

[node name="Box" type="Spatial" groups=["Boxes"]]
script = SubResource( 3 )

[node name="MeshInstance_1" type="MeshInstance" parent="."]
transform = Transform( 1, 0, 2.38419e-07, 0, 1, 0, -2.38419e-07, 0, 1, 0, -2, 0 )
mesh = SubResource( 1 )
skin = SubResource( 2 )
material/0 = null

[node name="MeshInstance_2" type="MeshInstance" parent="."]
visible = false
mesh = SubResource( 4 )
material/0 = null
