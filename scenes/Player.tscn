[gd_scene load_steps=5 format=2]

[ext_resource path="res://assets/PlayerMarker.png" type="Texture" id=1]

[sub_resource type="GDScript" id=14]
script/source = "extends Spatial

# Declare member variables here:

var grid
var type
var move = false
var step = 0
var pos = Vector3(0, 0, 0)
var old_pos = Vector3(0, 0, 0)
var undo_pos = Vector3(0, 0, 0)
var direction = Vector3(0, 0, 0)
var orientation = [\"N\", \"W\", \"S\", \"E\"]
var rotL = 0
var rotR = 0
var boxes

const DIR = {
\"N\" : {\"left\" : Vector3(-1, 0, 0), \"right\" : Vector3(1, 0, 0), \"up\" : Vector3(0, 0, -1), \"down\" : Vector3(0, 0, 1)},
\"W\" : {\"left\" : Vector3(0, 0, 1), \"right\" : Vector3(0, 0, -1), \"up\" : Vector3(-1, 0, 0), \"down\" : Vector3(1, 0, 0)},
\"S\" : {\"left\" : Vector3(1, 0, 0), \"right\" : Vector3(-1, 0, 0), \"up\" : Vector3(0, 0, 1), \"down\" : Vector3(0, 0, -1)},
\"E\" : {\"left\" : Vector3(0, 0, -1), \"right\" : Vector3(0, 0, 1), \"up\" : Vector3(1, 0, 0), \"down\" : Vector3(-1, 0, 0)}}
const STEP_COUNT = 60
const POS_STEP = 16.0 / STEP_COUNT
const ROT_STEP = deg2rad(90.0 / STEP_COUNT)

# Called when the node enters the scene tree for the first time.
func _ready():
	grid = get_parent()
	type = grid.PLAYER
	pos = translation
	boxes = get_tree().get_nodes_in_group(\"Boxes\")

# Called every frame. 'delta' is the elapsed time since the previous frame.
func _process(_delta):
	prepare_move()
	rot()
	get_tree().get_root().get_node(\"GameWindow/Game\").camera_to_player(translation, rotation)


func prepare_move():
	if !move:
		if Input.is_action_pressed(\"left\"):
			start_mov(\"left\")
		elif Input.is_action_pressed(\"right\"):
			start_mov(\"right\")
		elif Input.is_action_pressed(\"up\"):
			start_mov(\"up\")
		elif Input.is_action_pressed(\"down\"):
			start_mov(\"down\")
		elif Input.is_action_just_pressed(\"undo\"):
			undo_step()
	
	step_mov()


func start_mov(key):
		direction = DIR[orientation[0]][key]
		
		if grid.is_valid_move(pos, direction):
			old_pos = pos
			move = true
		
		if grid.is_pushing(old_pos, direction):
			G.pushes_player.append(pos)
			G.pushes_boxes.append([])
			
			for box in boxes:
				G.pushes_boxes[G.pushes].append(box.pos)
			
			G.pushes += 1


func step_mov():
	if move:
		for box in boxes:
			box.push(direction)
		
		step += 1
		pos += POS_STEP * direction
		
		if step == STEP_COUNT:
			move = false
			step = 0
			pos = Vector3(round(pos.x), pos.y, round(pos.z))
			grid.update_child_pos(self)
			grid.count_boxes_on_target()
		
		translation = pos


func undo_step():
	if !G.pushes_player.size() == 0:
		G.pushes -= 1
		undo_pos = translation
		translation = G.pushes_player[G.pushes]
		pos = translation
		grid.update_child_pos_undo(self)
		G.pushes_player.remove(G.pushes)
		
		for box in boxes:
			box.undo_pos = box.translation
			box.translation = G.pushes_boxes[G.pushes][0]
			box.pos = box.translation
			grid.update_child_pos_undo(box)
			box.check_display_state()
			G.pushes_boxes[G.pushes].remove(0)
		
		G.pushes_boxes.remove(G.pushes)
		grid.count_boxes_on_target()


func rot():
	if Input.is_key_pressed(KEY_Q) && step == 0 && rotR == 0 || rotL != 0:
		if rotL == 0:
			orientation.push_back(orientation[0])
			orientation.pop_front()
		rotL += 1
		if rotL == STEP_COUNT:
			rotL = 0
		rotate_y(ROT_STEP)
				
	if Input.is_key_pressed(KEY_E) && step == 0 && rotL == 0 || rotR != 0:
		if rotR == 0:
			orientation.push_front(orientation[3])
			orientation.pop_back()
		rotR += 1
		if rotR == STEP_COUNT:
			rotR = 0
		rotate_y(-ROT_STEP)
"

[sub_resource type="SpatialMaterial" id=12]
albedo_texture = ExtResource( 1 )
metallic_specular = 0.0
metallic_texture_channel = 4
emission_enabled = true
emission = Color( 0, 0, 0, 1 )
emission_energy = 1.0
emission_operator = 0
emission_on_uv2 = false
emission_texture = ExtResource( 1 )
uv1_scale = Vector3( 2, 1, 1 )

[sub_resource type="SphereMesh" id=13]
material = SubResource( 12 )
radius = 8.0
height = 16.0

[node name="Player" type="Spatial"]
script = SubResource( 14 )

[node name="MeshInstance" type="MeshInstance" parent="."]
transform = Transform( -4.37114e-08, 4.37114e-08, -1, 1, -4.37114e-08, -4.37114e-08, -4.37114e-08, -1, -4.37114e-08, 0, 0, 0 )
mesh = SubResource( 13 )
material/0 = null
